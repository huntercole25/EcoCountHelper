DeltaPct = (-(1-exp(PredBeta)^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
TmpDat[,UpperConf := DeltaPct +
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
}else{
PredColName <- ChangeTab[j,PredCol]
PredVect <- Data[[PredColName]][Data[[GroupCol]] == Group]
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta/(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
TmpDat[,UpperConf := DeltaPct +
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
}
FullEffects <- c(FullEffects, list(TmpDat))
}
}
data.table::rbindlist(FullEffects)
}
RealEffectTabLong(MyluMod, Predictors = c("Yday", "MoonScale"), UnitChanges = c(10, 0.5), GroupPat = "[[:alpha:]]{4}", GroupCol = "Species", ScaleSds = c(NA,2), PredVects = c("Yday", "MoonPct"), Data = junk)
RealEffectTabLong <- function(Models, Predictors, UnitChanges, ConfInt = 95, GroupPat, GroupCol,
ScaleSds = NULL, PredVects = NULL, Data = NULL){
if("glmmTMB" %in% class(Models)){
Models <- deparse(substitute(Models))
}
FullEffects <- list()
ChangeTab <- data.table::data.table(Predictors = Predictors, UnitCh = UnitChanges,
ScaleSd = ScaleSds)
for(i in Models){
TmpMod <- get(i, envir = .GlobalEnv)
Group <- regmatches(i, regexpr(GroupPat, i))
for(j in 1:nrow(ChangeTab)){
if(is.na(ChangeTab[j,ScaleSds])==F){ChangeTab[j,PredCol := PredVects[j]]}
Predictor <- ChangeTab[j,Predictors]
UnitChange <- ChangeTab[j,UnitCh]
PredBeta <- summary(TmpMod)$coeff$cond[Predictor,1]
PredSe <- summary(TmpMod)$coeff$cond[Predictor,2]
if(is.na(ChangeTab[j,ScaleSd]) == T){
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta)^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
TmpDat[,UpperConf := DeltaPct +
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
}else{
PredColName <- ChangeTab[j,PredCol]
PredVect <- Data[[PredColName]][Data[[GroupCol]] == Group]
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta/(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
TmpDat[,UpperConf := DeltaPct +
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
}
FullEffects <- c(FullEffects, list(TmpDat))
}
}
data.table::rbindlist(FullEffects)
}
RealEffectTabLong(MyluMod, Predictors = c("Yday", "MoonScale"), UnitChanges = c(10, 0.5), GroupPat = "[[:alpha:]]{4}", GroupCol = "Species", ScaleSds = c(NA,2), PredVects = c("Yday", "MoonPct"), Data = junk)
RealEffectTabLong <- function(Models, Predictors, UnitChanges, ConfInt = 95, GroupPat, GroupCol,
ScaleSds = NULL, PredVects = NULL, Data = NULL){
if("glmmTMB" %in% class(Models)){
Models <- deparse(substitute(Models))
}
FullEffects <- list()
ChangeTab <- data.table::data.table(Predictors = Predictors, UnitCh = UnitChanges,
ScaleSd = ScaleSds)
for(i in Models){
TmpMod <- get(i, envir = .GlobalEnv)
Group <- regmatches(i, regexpr(GroupPat, i))
for(j in 1:nrow(ChangeTab)){
if(is.na(ChangeTab[j,ScaleSd])==F){ChangeTab[j,PredCol := PredVects[j]]}
Predictor <- ChangeTab[j,Predictors]
UnitChange <- ChangeTab[j,UnitCh]
PredBeta <- summary(TmpMod)$coeff$cond[Predictor,1]
PredSe <- summary(TmpMod)$coeff$cond[Predictor,2]
if(is.na(ChangeTab[j,ScaleSd]) == T){
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta)^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
TmpDat[,UpperConf := DeltaPct +
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
}else{
PredColName <- ChangeTab[j,PredCol]
PredVect <- Data[[PredColName]][Data[[GroupCol]] == Group]
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta/(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
TmpDat[,UpperConf := DeltaPct +
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
}
FullEffects <- c(FullEffects, list(TmpDat))
}
}
data.table::rbindlist(FullEffects)
}
RealEffectTabLong(MyluMod, Predictors = c("Yday", "MoonScale"), UnitChanges = c(10, 0.5), GroupPat = "[[:alpha:]]{4}", GroupCol = "Species", ScaleSds = c(NA,2), PredVects = c("Yday", "MoonPct"), Data = junk)
RealEffectTabWide <- function(Models, Predictors, UnitChanges, ConfInt = 95,
ScaleSds = NULL, PredVects = NULL, Data = NULL){
if("glmmTMB" %in% class(Models)){
Models <- deparse(substitute(Models))
}
FullEffects <- list()
ChangeTab <- data.table::data.table(Predictors = Predictors, UnitCh = UnitChanges,
ScaleSd = ScaleSds)
for(i in Models){
TmpMod <- get(i, envir = .GlobalEnv)
Group <- regmatches(i, regexpr(GroupPat, i))
for(j in 1:nrow(ChangeTab)){
if(is.na(ChangeTab[j,ScaleSd])==F){ChangeTab[j,PredCol := PredVects[j]]}
Predictor <- ChangeTab[j,Predictors]
UnitChange <- ChangeTab[j,UnitCh]
PredBeta <- summary(TmpMod)$coeff$cond[Predictor,1]
PredSe <- summary(TmpMod)$coeff$cond[Predictor,2]
if(is.na(ChangeTab[j,ScaleSd]) == T){
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta)^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
TmpDat[,UpperConf := DeltaPct +
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
}else{
PredColName <- ChangeTab[j,PredCol]
PredVect <- Data[[PredColName]]
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta/(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
TmpDat[,UpperConf := DeltaPct +
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
}
FullEffects <- c(FullEffects, list(TmpDat))
}
}
data.table::rbindlist(FullEffects)
}
RealEffectTabWide(EcoCountHelper::EpfuNb1Wide, c("Yday", "MoonScale"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
library(devtools)
data("EpfuNb2Wide")
RealEffectTabWide(EcoCountHelper::EpfuNb2Wide, c("Yday", "MoonScale"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
RealEffectTabWide(EpfuNb2Wide, c("Yday", "MoonScale"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
RealEffectTabWide <- function(Models, Predictors, UnitChanges, ConfInt = 95,
ScaleSds = NULL, PredVects = NULL, Data = NULL){
if("glmmTMB" %in% class(Models)){
Models <- deparse(substitute(Models))
}
FullEffects <- list()
ChangeTab <- data.table::data.table(Predictors = Predictors, UnitCh = UnitChanges,
ScaleSd = ScaleSds)
for(i in Models){
TmpMod <- get(i, envir = .GlobalEnv)
for(j in 1:nrow(ChangeTab)){
if(is.na(ChangeTab[j,ScaleSd])==F){ChangeTab[j,PredCol := PredVects[j]]}
Predictor <- ChangeTab[j,Predictors]
UnitChange <- ChangeTab[j,UnitCh]
PredBeta <- summary(TmpMod)$coeff$cond[Predictor,1]
PredSe <- summary(TmpMod)$coeff$cond[Predictor,2]
if(is.na(ChangeTab[j,ScaleSd]) == T){
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta)^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
TmpDat[,UpperConf := DeltaPct +
((-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)))^UnitChange)*100)]
}else{
PredColName <- ChangeTab[j,PredCol]
PredVect <- Data[[PredColName]]
TmpDat <- data.table::data.table(
Model = i,
Predictor = ChangeTab[j,Predictors],
DeltaPct = (-(1-exp(PredBeta/(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100)
TmpDat[,LowerConf := DeltaPct -
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
TmpDat[,UpperConf := DeltaPct +
(-(1-exp((stats::qnorm(1-((100-ConfInt)/2/100))*PredSe)/
(ChangeTab[j,ScaleSd]*stats::sd(PredVect)))^UnitChange))*100]
}
FullEffects <- c(FullEffects, list(TmpDat))
}
}
data.table::rbindlist(FullEffects)
}
RealEffectTabWide(EpfuNb2Wide, c("Yday", "MoonScale"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData, Group)
summary(EpfuNb2Wide)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData, Group)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct)"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
summary(EpfuNb2Wide)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct)"), c(5, 0.3), ScaleSds = c(NA, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct)"), c(5, 0.3), ScaleSds = c(2, 2), PredVects = c(NA, "MoonPct"), Data = SppAccpData)
RealEffectTabWide(EpfuNb2Wide, c("scale2(Yday)", "scale2(MoonPct)"), c(5, 0.3), ScaleSds = c(2, 2), PredVects = c("Yday", "MoonPct"), Data = SppAccpData)
library(devtools)
document()
library(EcoCountHelper)
?ResidPlotLong
data("BatDataWide", "EpfuNb2Wide", "MyevNb2Wide", package = "EcoCountHelper")
ResidPlotWide(BatDataWide, c("EpfuNb2Wide", "MyevNb2Wide"), "^[[:alpha:]]{4}")
library(EcoCountHelper)
ResidPlotWide(BatDataWide, c("EpfuNb2Wide", "MyevNb2Wide"), "^[[:alpha:]]{4}")
png
package_version(png)
package_version("png")
packageDescription("png")
library(EcoCountHelper)
library(EcoCountHelper)
library(EcoCountHelper)
library(EcoCountHelper)
?ResidPlotLong
data("BatDataWide", "EpfuNb2Wide", "MyevNb2Wide", package = "EcoCountHelper")
ResidPlotWide(BatDataWide, c("EpfuNb2Wide", "MyevNb2Wide"), "^[[:alpha:]]{4}")
ResidPlotWide
library(EcoCountHelper)
data("BatDataWide", "EpfuNb2Wide", "MyevNb2Wide", package = "EcoCountHelper")
ResidPlotWide(BatDataWide, c("EpfuNb2Wide", "MyevNb2Wide"), "^[[:alpha:]]{4}")
MyevNb2WideSimResidPlot
DistFitLong
library(glmmTMB)
?nbinom1()
library(glmmTMB)
?nbinom1()
?glmmTMB()
?glm
?nbinom1
cite("EcoCountHelper")
citation("EcoCountHelper")
document()
library(devtools)
library(roxygen2)
document()
document()
document()
build_vignettes()
build_vignettes()
library(EcoCountHelper)
?EcoCountHelper
citation("EcoCountHelper")
document()
library(EcoCountHelper)
citation("EcoCountHelper")
citation("EcoCountHelper")
document()
library(EcoCountHelper)
citation("EcoCountHelper")
vignette(package = "EcoCountHelper")
vignette()
vignette("EcoCountHelper")
document()
library(EcoCountHelper)
vignette()
vignette("EcoCountHelper")
vignette(package = "EcoCountHelper")
?usethis::use_vignette()
?usethis::use_vignette("EcoCountHelperVig", "Analyzing Wildlife Count Data using EcoCountHelper")
?usethis::use_vignette("EcoCountHelperVig2", "Analyzing Wildlife Count Data using EcoCountHelper")
install()
install()
library(EcoCountHelper)
vignette()
vignette(package = "EcoCountHelper")
document()
install()
library(EcoCountHelper)
vignette(package = "EcoCountHelper")
install(build_vignettes = T)
library(EcoCountHelper)
vignette(package = "EcoCountHelper")
install(build_vignettes = T)
library(EcoCountHelper)
vignette(package = "EcoCountHelper")
document()
build_vignettes()
install(build_vignettes = T)
library(EcoCountHelper)
vignette(package = "EcoCountHelper")
vignette("EcoCountHelperExample")
build_vignettes()
install(build_vignettes = T)
library(EcoCountHelper)
vignette("EcoCountHelperExample")
data("BatDataWide")
nrow(BatDataWide)
nrow(fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv"))
setdiff(BatDataWide, fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv"))
BatDataWide
fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
?use_data()
?use_data_raw()
BatDataWide <- fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
use_data_raw("BatDataWide")
usethis::use_data(BatDataWide, overwrite = TRUE)
library(ggplot2)
?diamonds
nrow(BatDataWide)
length(BatDataWide)
BatDataWide
BatDataWide <- BatDataWide[,c("Site", "SampleDate", "Anpa", "Coto", "Epfu", "Euma", "Laci", "Lano", "Myca", "Myci", "Myev",
"Mylu", "Myth", "Myvo", "Myyu", "EastingUsAea", "NorthingUsAea", "Yday", "Year", "MoonScale",
"ForestScale", "DevelScale", "WaterScale", "ElevScale", "YdayScale", "BrightScale",
"CoolScale", "StrScale")]
BatdataWide
BatDataWide
BatDataWide[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
BatDataWide <- BatDataWide[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
str(BatDataWide)
BatDataWide[,Year <- as.factor(Year)]
BatDataWide[,Year := as.factor(Year)]
str(BatDataWide)
BatDataWide[,Site := as.factor(Site)]
use_data("BatDataWide", overwrite = T)
use_data_raw("BatDataWide")
usethis::use_data(BatDataWide, overwrite = TRUE)
data("BatDataWide")
BatDataWide
install()
document()
install()
library(EcoCountHelper)
library(EcoCountHelper)
document()
install()
BatDataWide <- BatDataWide[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
use_data(BatDataWide, overwrite = T)
document()
install()
data("BatDataWide")
data("BatDataWide")
data("BatDataWide")
BatDataWide
BatDataWide <- fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
BatDataWide[,Year := as.factor(Year)]
BatDataWide <- BatDataWide[,c("Site", "SampleDate", "Anpa", "Coto", "Epfu", "Euma", "Laci", "Lano", "Myca", "Myci", "Myev",
"Mylu", "Myth", "Myvo", "Myyu", "EastingUsAea", "NorthingUsAea", "Yday", "Year", "MoonScale",
"ForestScale", "DevelScale", "WaterScale", "ElevScale", "YdayScale", "BrightScale",
"CoolScale", "StrScale")]
BatDataWide[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
BatDataWide <- BatDataWide[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
BatDataWide[,Site := as.factor(Site)]
BatDataWide
use_data("BatDataWide", overwrite = T)
use_data(BatDataWide, overwrite = T)
document()
document()
install()
document()
document()
document()
install()
library(devtools)
library(roxygen2)
document()
document()
document()
install()
document()
document()
install()
library(EcoCountHelper)
data("BatDataWide")
str(BatDataWide)
library(lubridate)
BatDataWide[year(SampleDate)==2016]
BatDataWide[year(SampleDate)==2017]
BatDataWide[year(SampleDate)==2016 | year(SampleDate)==2017]
BatDataWide <- BatDataWide[year(SampleDate)==2016 | year(SampleDate)==2017]
use_data(BatDataWide)
use_data(BatDataWide, overwrite = T)
str(BatDataWide)
document()
install()
document()
install()
use_data(BatDataWide)
use_data(BatDataWide, overwrite = T)
document()
document()
install()
library(devtools)
library(roxygen2)
document()
install()
?BatDataWide
data("BatDataWide")
str(BatDataWide)
BatDataWide
SppAccpData <- fread("./Data/Benchmark_Data/07_SppAccpFinalParams.csv")
SppAccpData[,SampleDate := ymd(SampleDate, tz = "America/Denver")]
SppAccpData <- SppAccpData[year(SampleDate) > 2015,]
SppAccpData[,Site := as.factor(Site)]
SppAccpData[,Year := as.factor(Year)]
SppAccpData <- SppAccpData[Elev <2200,]
SppAccpData <- fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
SppAccpData[,SampleDate := ymd(SampleDate, tz = "America/Denver")]
SppAccpData <- SppAccpData[year(SampleDate) > 2015,]
SppAccpData[,Site := as.factor(Site)]
SppAccpData[,Year := as.factor(Year)]
SppAccpData <- SppAccpData[Elev <2200,]
library(lubridate)
SppAccpData <- fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
SppAccpData[,SampleDate := ymd(SampleDate, tz = "America/Denver")]
SppAccpData <- SppAccpData[year(SampleDate) > 2015,]
SppAccpData[,Site := as.factor(Site)]
SppAccpData[,Year := as.factor(Year)]
SppAccpData <- SppAccpData[Elev <2200,]
SppAccpData
str(SppAccpData)
names(data("BatDataWide"))
names(BatDataWide)
names(SppAccpData)
SppAccpData[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
BatDataWide <- SppAccpData[,!c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth")]
BatDataWide
names(BatDataWide)
BatDataWide[,!c(10:18, 21:25)]
length(BatDataWide[,!c(10:18, 21:25)])
BatDataWide <- BatDataWide[,!c(10:18, 21:25)]
use_data(BatDataWide)
use_data(BatDataWide, overwrite = T)
library(devtools)
library(roxygen2)
data("BatDataWide")
str(BatDataWide)
document()
data("BatDataWide")
data("BatDataWide")
install()
?BatDataWide
?BatDataWide
browseVignettes("EcoCountHelper")
browseVignettes(EcoCountHelper)
browseVignettes("EcoCountHelper")
vignette(package = "EcoCountHelper")
library(devtools)
install(build_vignettes = T)
?BatDataWide
library(EcoCountHelper)
?BatDataWide
library(devtools)
library(roxygen2)
library(glmmTMB)
library(data.table)
library(lubridate)
library(plyr)
library(ggplot2)
library(performance)
library(DHARMa)
library(EcoCountHelper)
library(tidyr)
library(devtools)
library(roxygen2)
SppAccpData <- fread("~/GRTE_1617/Data/Benchmark_Data/07_SppAccpFinalParams.csv")
SppAccpData[,SampleDate := ymd(SampleDate, tz = "America/Denver")]
SppAccpData <- SppAccpData[year(SampleDate) > 2015,]
SppAccpData[,Site := as.factor(Site)]
SppAccpData[,Year := as.factor(Year)]
SppAccpData <- SppAccpData[Elev <2200,]
setcolorder(SppAccpData, c("Site", "SampleDate", "Epfu", "Laci", "Lano",
"Myev", "Mylu", "Myvo", "Myyu", "EastingUsAea",
"NorthingUsAea", "Year", "Yday", "YdayScale", "MoonPct",
"MoonScale", "ManualForestPct", "ForestScale", "ManualDevelPct",
"DevelScale", "WaterDist", "WaterScale", "Elev", "ElevScale",
"BrightCount", "BrightScale", "PropCool", "CoolScale", "StrWeight",
"StrScale"))
SppAccpData[,c("Anpa", "Coto", "Euma", "Myca", "Myci", "Myth", "Lat", "Lon", "LightCount",
"DevelPct", "ForestPct"):=NULL]
BatDataWide <- SppAccpData
BatDataLong <- as.data.table(pivot_longer(SppAccpData, c("Epfu", "Laci", "Lano", "Myev", "Mylu", "Myvo", "Myyu"),
names_to = "Species", values_to = "Count"))
setcolorder(BatDataLong, c("Site", "SampleDate", "Species", "Count"))
use_data(BatDataWide, overwrite = T)
use_data(BatDataLong, overwrite = T)
BatDataWide
BatDataLong
document()
document()
document()
summary(warnings)
summary(warnings())
document()
install()
install()
library(EcoCountHelper)
?BatDataLong
?BatDataLong
